{"version":3,"sources":["views/elements/loadingForCreateProduct.js","views/pages/profile/UserInformation.js","redux/action/Profil/RenameProfileActions.js"],"names":["LoadingForCreateProduct","className","UserInformation","profile","useSelector","state","profileClient","loadingProfile","loading","regions","categoryRegion","region","renameProfile","dispatch","useDispatch","useForm","register","handleSubmit","reset","errors","watch","formState","useEffect","Object","entries","map","item","useState","photo","setPhoto","setValue","name","to","style","fontSize","for","multiple","onchange","type","id","display","onChange","e","file","element","fileReader","FileReader","addEventListener","src","target","result","readAsDataURL","convertBase64","files","document","querySelectorAll","width","height","alt","marginLeft","onSubmit","data","params","payload","requests","then","alert","catch","response","message","required","phone","color","placeholder","email","index","value","password"],"mappings":"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","file":"static/js/24.a168360e.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../../assets/scss/loadingCreateProduct.scss\";\n\nconst LoadingForCreateProduct = () => {\n  return (\n    <div className=\"loadingio-spinner-spinner-jig0v45w2pd\">\n      <div className=\"ldio-qiso3zjp6h\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoadingForCreateProduct;\n","import React, { useState } from \"react\";\nimport \"../../../assets/scss/settings.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { renameProfile } from \"../../../redux/action/Profil/RenameProfileActions\";\nimport LoadingForCreateProduct from \"../../elements/loadingForCreateProduct\";\nimport { profileClient } from \"../../../redux/action/Auth/ProfileClientAction\";\nimport { useForm } from \"react-hook-form\";\nimport { useEffect } from \"react\";\n\nconst UserInformation = () => {\n  const profile = useSelector((state) => state.profileClient.profileClient);\n  const loadingProfile = useSelector((state) => state.profileClient.loading);\n  const regions = useSelector((state) => state.categoryRegion.region);\n\n  const { loading } = useSelector((state) => state.renameProfile);\n  const dispatch = useDispatch();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    watch,\n    formState: { errors },\n  } = useForm();\n\n  useEffect(() => {\n    if (profile) {\n      Object.entries(profile).map((item) => ({\n        [item[0]]: item[1],\n      }));\n      reset(profile);\n    }\n  }, [profile]);\n\n  const onSubmit = (data) => {\n    const payload = {\n      ...data,\n      photo,\n    };\n    dispatch(renameProfile(payload));\n  };\n\n  useEffect(() => {\n    dispatch(profileClient());\n  }, []);\n\n  const convertBase64 = (file, element) => {\n    const fileReader = new FileReader();\n\n    fileReader.addEventListener(\"load\", function (e) {\n      element.src = e.target.result;\n    });\n\n    fileReader.readAsDataURL(file);\n  };\n\n  const [photo, setPhoto] = useState(\"\");\n  const [value, setValue] = useState([]);\n\n  return (\n    <div className=\"wrapper\">\n      {loadingProfile ? (\n        <p>Loading...</p>\n      ) : (\n        <>\n          <div className=\"title user__title\">{profile.name}</div>\n          <span className=\"change__user\">доступ к редактирование</span>\n          <ul>\n            <li className=\"isactive\">Мои Данный</li>\n            <li>\n              <Link to=\"/user-setting\">Данный продавца</Link>\n            </li>\n          </ul>\n          <div className=\"img-input\">\n            <div className=\"factory-item-img\">\n              <label style={{ fontSize: \"50px\" }} for=\"file-input\">\n                +\n              </label>\n              <input\n                multiple\n                name=\"Ads[imageFiles][]\"\n                onchange=\"loadImage(event)\"\n                type=\"file\"\n                id=\"file-input\"\n                className=\"img-input\"\n                style={{ display: \"none\" }}\n                onChange={(e) => {\n                  convertBase64(\n                    e.target.files[0],\n                    document.querySelectorAll(\"#img_file\")[0]\n                  );\n                  setPhoto(e.target.files[0]);\n                  setValue(e.target.files[0]);\n                }}\n              />\n            </div>\n            <img\n              style={{ width: \"150px\", height: \"150px\" }}\n              src={`https://birmakon.loko.uz/${profile?.photo}`}\n              alt=\"not found\"\n            />\n            <img\n              src=\"\"\n              style={{ width: \"150px\", height: \"150px\", marginLeft: \"30px\" }}\n              id=\"img_file\"\n              alt=\"\"\n            />\n          </div>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"inputs\">\n              <div className=\"input\">\n                <div className=\"input__title\">Контактное лицо </div>\n                <input type=\"text\" />\n              </div>\n              <div className=\"input\">\n                <div className=\"input__title\">Телефон</div>\n                <input\n                  type=\"text\"\n                  {...register(\"phone\", {\n                    required: true,\n                  })}\n                />\n                {errors.phone && (\n                  <span style={{ color: \"red\" }}>Заполните поля !</span>\n                )}\n              </div>\n              <div className=\"input\">\n                <div className=\"input__title\">Емаил</div>\n                <input\n                  type=\"email\"\n                  {...register(\"email\", {\n                    required: true,\n                  })}\n                  placeholder=\"mirdesign1er@gmail.com\"\n                />\n                {errors.email && (\n                  <span style={{ color: \"red\" }}>Заполните поля !</span>\n                )}\n              </div>\n              <div className=\"input\">\n                <div className=\"input__title\">Регион</div>\n                <select>\n                  {regions.map((item, index) => (\n                    <option key={index} value={item.id}>\n                      {item.name}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div className=\"input\">\n                <div className=\"input__title\">Адрес</div>\n                <input type=\"text\" placeholder=\"Махмуда тараби 23...\" />\n              </div>\n              <div className=\"input\">\n                <div className=\"input__title\">Наименование организации</div>\n                <input\n                  type=\"text\"\n                  placeholder=\"Мироншох Насимов\"\n                  {...register(\"name\", {\n                    required: true,\n                  })}\n                />\n                {errors.name && (\n                  <span style={{ color: \"red\" }}>Заполните поля !</span>\n                )}\n              </div>\n            </div>\n            <div className=\"data__title\">Данные для входа</div>\n            <div className=\"inputs tigr\">\n              <div className=\"input\" id=\"input\">\n                <div className=\"input__title\">Логин</div>\n                <input type=\"text\" placeholder=\"Мироншох020\" />\n              </div>\n              <div className=\"input\">\n                <div className=\"input__title\">Новый пароль</div>\n                <input\n                  type=\"password\"\n                  {...register(\"password\", {\n                    required: true,\n                  })}\n                />\n                {errors.password && (\n                  <span style={{ color: \"red\" }}>Заполните поля !</span>\n                )}\n              </div>\n            </div>\n            <div className=\"save-block\">\n              <button className=\"save\" type=\"submit\">\n                {loading ? <LoadingForCreateProduct /> : \"Сохранить\"}\n              </button>\n            </div>\n          </form>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserInformation;\n","import requests from \"../../../helpers/requests\";\n\nexport const renameProfile = (params) => (dispatch) => {\n  dispatch({ type: \"rename_profile_start\", payload: params });\n\n  requests\n    .renameProfile(params)\n    .then(({ data }) => {\n      dispatch({ type: \"rename_profile_success\", payload: data });\n      alert(\"Успешно редактировали !\");\n    })\n    .catch(({ response }) => {\n      let message = (response && response.data.message) || \"Login error\";\n      dispatch({ type: \"rename_profile_error\", payload: message });\n      alert(\"Что так !\");\n    });\n};\n"],"sourceRoot":""}